// RGB display program

// Applies a stretch to the given pixel color
void applyStretch(float4 inputColor,
                  float  redDataMax,
                  float  greenDataMax,
                  float  blueDataMax,
                  float  redLowerValue,
                  float  redUpperValue,
                  float  greenLowerValue,
                  float  greenUpperValue,
                  float  blueLowerValue,
                  float  blueUpperValue,
              out float4 modifiedColor)
{
   // Currently only a linear raw value stretch is supported
   modifiedColor.r = ((inputColor.r - redLowerValue / redDataMax) / ((redUpperValue - redLowerValue) / redDataMax));
   modifiedColor.g = ((inputColor.g - greenLowerValue / greenDataMax) / ((greenUpperValue - greenLowerValue) / greenDataMax));
   modifiedColor.b = ((inputColor.b - blueLowerValue / blueDataMax) / ((blueUpperValue - blueLowerValue) / blueDataMax));
   modifiedColor.a = inputColor.a;
}

void main(in  float2 texCoord     : TEXCOORD0, 
          out float4 outputColor  : COLOR,
          const uniform samplerRECT inputImage,
          uniform float             redDataMax,
          uniform float             greenDataMax,
          uniform float             blueDataMax,
          uniform float             redLowerValue,
          uniform float             redUpperValue,
          uniform float             greenLowerValue,
          uniform float             greenUpperValue,
          uniform float             blueLowerValue,
          uniform float             blueUpperValue,
          uniform float             alpha)
{
   // Get the texture value
   float4 imageColor = texRECT(inputImage, texCoord);

   // Apply the stretch
   float4 stretchColor;
   applyStretch(imageColor, redDataMax, greenDataMax, blueDataMax, redLowerValue, redUpperValue, greenLowerValue, greenUpperValue,
      blueLowerValue, blueUpperValue, stretchColor);

   // Clip the stretched data value
   outputColor.r = clamp(stretchColor.r, 0.0f, 1.0f);
   outputColor.g = clamp(stretchColor.g, 0.0f, 1.0f);
   outputColor.b = clamp(stretchColor.b, 0.0f, 1.0f);
   outputColor.a = (alpha / 255.0f) * stretchColor.a;
}
