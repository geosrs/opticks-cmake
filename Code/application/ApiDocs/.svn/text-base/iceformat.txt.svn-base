/** \page iceformat Ice Format Specification
This document describes the format of the .ice.h5 file.
The Ice Format is designed to support import/export of data from %Opticks that preserves the %Opticks specific data structures.
The Ice Format is actually written as an HDF5 file.
Information on HDF5 can be found at http://www.hdfgroup.org/HDF5/.
This document will describe how the data is stored within the HDF5 file for various versions of the Ice Format.

Versions of Ice File:
<table>
<tr>
<td><b>Major Ice Format Version #</b></td><td><b>Minor Ice Format Version #</b></td><td><b>Versions of Application That Will Export</b><td><b>Versions of Application That Will Import</b></td>
</tr>

<tr><td>0</td><td>0</td><td>COMET MPR01.03.3686 to COMET MPR03.08.6674</td><td>COMET MPR01.03.3686 to Current Version</td></tr>
<tr><td>0</td><td>70</td><td>COMET MPR03.09.7404 only</td><td>COMET MPR03.09.7404 to Current Version</td></tr>
<tr><td>0</td><td>90</td><td>COMET MPR03.10.8013 only</td><td>COMET MPR03.10.8013 to Current Version</td></tr>
<tr><td>1</td><td>0</td><td>COMET MPR03.11.738 to %Opticks 4.0.0</td><td>COMET MPR03.11.738 to Current Version</td></tr>
<tr><td>1</td><td>10</td><td>%Opticks 4.0.1 to Current Version</td><td>%Opticks 4.0.1 to Current Version</td></tr>
</table>

The most basic part of the Ice file is the IceFormatDescriptor which identifies an Ice file from any other HDF5 file.
The IceFormatDescriptor is an HDF5 group with the name of "IceFormatDescriptor" written at the root node of the HDF5 file.
Its contents are described below.

\section IceFormatDescriptorSection IceFormatDescriptor
<hr>
<b>Parent:</b> None <br>
<b>HDF5 Path:</b> /IceFormatDescriptor <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 0.0 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> All versions of the Ice format <br>
<b>Optional In:</b> None <br>
<b>Contents:</b>
This HDF5 group describes the version of the Ice formatted file along with additional descriptive information.
Information on the attributes stored on this group are provided below.
<table align="center">
<tr>
    <td><b>Attribute Name</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>FormatVersion</td>
    <td>H5T_NATIVE_UINT</td>
    <td>Scalar</td>
    <td>
    The format version is stored in the following manner: MajorFormatVersion * 100 + MinorFormatVersion.
    For example, 0.90 would be calculated as 0 * 100 + 90, so a value of 90 would be stored in this field.
    Another example, 2.32 would be calculated as 2 * 100 + 32, so a value of 232 would be stored in this field.
    </td>
</tr>
<tr>
    <td>File Type</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>
    The contents of this file. Valid values are "RasterElement" and "PseudocolorLayer". This field was introduced in version 1.10.
    If the file version is prior to 1.10, readers can parse this file as though this field contains "RasterElement".
    </td>
</tr>
<tr>
    <td>Creator</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>Name of the application that wrote the ice.h5 file.</td>
</tr>
<tr>
    <td>CreatorVersion</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>Version # of the application that wrote the ice.h5 file.</td>
</tr>
<tr>
    <td>CreatorOS</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>
    Operating system name that application was running on when the .ice.h5 file was written.
    This value should only be used for informational purposes and should NOT be relied upon by readers or writers of this format.
    </td>
</tr>
<tr>
    <td>CreatorArch</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>
    Architecture of the system that the application was running on when the .ice.h5 file was written.
    This should only be used for informational purposes and should NOT be relied upon by readers or writers of this format.
    </td>
</tr>
</table>

\section DatasetsSection Datasets
<hr>
<b>Parent:</b> None <br>
<b>HDF5 Path:</b> /Datasets <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 0.0 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 0.0 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b>
This HDF5 group acts simply as a container for the data contained within the ice file.
This group will contain additional HDF5 groups for each raw cube that is stored in the file.
Each raw cube stored in the file will be stored in a child HDF5 group following the naming convention of Cube[Number] (i.e.: Cube1, Cube2, Cube3, etc.).
The numbers will start at 1 and then increase.
All current versions of the Ice format only provide support for one Cube, so currently only Cube1 is supported.
Please see \ref CubeSection for more details.

\section CubeSection Cube
<hr>
<b>Parent:</b> \ref DatasetsSection <br>
<b>HDF5 Path:</b> Cube[Number] <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 0.0 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 0.0 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b> 
This HDF5 group acts as a container for all of the data required to store the information for a single cube.
This group will contain the following: \ref RawDataSection, \ref OriginalNumbersSection, \ref WavelengthsSection, \ref BandNamesSection, \ref MetadataSection, \ref ClassificationSection, \ref GcpSection, \ref UnitsSection, \ref DisplayInformationSection, \ref BandStatisticsSection.
To determine if the given item is required to be present or optional, please refer to the documentation on that item.

\section RawDataSection RawData
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> RawData <br>
<b>HDF5 Container:</b> HDF5 Dataset <br>
<b>HDF5 Type:</b> See Contents for more details <br>
<b>HDF5 DataSpace:</b> 3 dimensions. <br>
<b>Added In:</b> Version 0.0 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 0.0 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b>
This HDF5 Dataset contains the actual data values that make up the row, colum and band data for the cube.
<br><br>
<b>The following applies to all versions of the Ice format:</b> <br>
The HDF5 Dataset will always have 3 dimensions to represent the data for each row, column and band in the cube.
The meaning of each dimension will be dependent on the interleave used on export.
Three interleaves are supported.
The meanings of the 3 dimensions based on the interleave are defined below:<br><br>
<table align="center">
<tr><td><b>Interleave</b></td><td><b>Dimension 0</b></td><td><b>Dimension 1</b></td><td><b>Dimension 2</b></td></tr>
<tr><td>BIP</td><td>Row</td><td>Column</td><td>Band</td></tr>
<tr><td>BSQ</td><td>Band</td><td>Row</td><td>Column</td></tr>
<tr><td>BIL</td><td>Row</td><td>Band</td><td>Column</td></tr>
</table>
<p>In order to determine the interleave, there will be an HDF5 Attribute present on the HDF5 Dataset called "InterleaveFormat" which will be of type H5T_C_S1 that has a scalar dataspace.
The value of the string will be one of the following: "BIP", "BSQ" or "BIL".
The HDF5 type of the HDF5 Dataset can be one of the following:<br><br>
<table align="center">
<tr><td><b>HDF5 Type</b></td><td><b>EnumValue used by application in EncodingType enum</b></td></tr>
<tr><td>H5T_NATIVE_CHAR</td><td>INT1SBYTE</td></tr>
<tr><td>H5T_NATIVE_UCHAR</td><td>INT1UBYTE</td></tr>
<tr><td>H5T_NATIVE_SHORT</td><td>INT2SBYTES</td></tr>
<tr><td>H5T_NATIVE_USHORT</td><td>INT2UBYTES</td></tr>
<tr><td>H5T_NATIVE_INT</td><td>INT4SBYTES</td></tr>
<tr><td>H5T_NATIVE_UINT</td><td>INT4UBYTES</td></tr>
<tr><td>H5T_NATIVE_FLOAT</td><td>FLT4BYTES</td></tr>
<tr><td>H5T_NATIVE_DOUBLE</td><td>FLT8BYTES</td></tr>
<tr>
<td>A HDF5 Compound Datatype with two members:
 - A member with name "Real" of type H5T_NATIVE_SHORT
 - A member with name "Imaginary" of type H5T_NATIVE_SHORT</td>
<td>INT4SCOMPLEX</td>
</tr>
<tr>
<td>A HDF5 Compound Datatype with two members:
 - A member with name "Real" of type H5T_NATIVE_FLOAT
 - A member with name "Imaginary" of type H5T_NATIVE_FLOAT</td>
<td>FLT8COMPLEX</td>
</tr>
</table>
<p>
<b>The following only applies to version 0.0 of the Ice format:</b> <br>
The original numbers are stored as HDF5 Attributes of this HDF5 Dataset.
There are 3 attributes with the following names: "Original Cube Row Numbers", "Original Cube Column Numbers", and "Original Cube Band Numbers".
All three of the attributes are of type H5T_NATIVE_UINT and have a dataspace with 1 dimension.
As of version 0.70 these values are now being stored inside an HDF5 Group, please see \ref OriginalNumbersSection for more information.
 
\section OriginalNumbersSection OriginalNumbers
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> OriginalNumbers <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 0.70 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 0.70 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b> 
This HDF5 group acts a container for the row, column and band original numbers.
For an explanation of original numbers, please see \ref OriginalNumbersDetailSection.
This group contains the row, column and band original numbers stored as child HDF5 datasets.
There are exactly three required child HDF5 Datasets as shown below:<br><br>
<table align="center">
<tr>
    <td><b>Dataset Name</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
</tr>
<tr>
    <td>Row</td>
    <td>H5T_NATIVE_UINT</td>
    <td>1 dimension</td>
</tr>
<tr>
    <td>Column</td>
    <td>H5T_NATIVE_UINT</td>
    <td>1 dimension</td>
</tr>
<tr>
    <td>Band</td>
    <td>H5T_NATIVE_UINT</td>
    <td>1 dimension</td>
</tr>
</table>
<p>
The size of the first and only dimension for each Dataset must be the same size as the corresponding dimension in \ref RawDataSection .
For example, if the size of the three dimensions for RawData are {120, 250, 10} and the InterleaveFormat attribute for the RawData is "BIP".
The "Row" dataset must then have a size of 120 for its first dimension.
The "Column" dataset must then have a size of 250 for its first dimension.
The "Band" dataset must then have a size of 10 for its first dimension.
As another example, if the size of the three dimensions for RawData are {8, 500, 384} and the InterleaveFormat attribute for the Raw Data is "BSQ".
The "Row" dataset must then have a size of 500 for its first dimension.
The "Column" dataset must then have a size of 384 for its first dimension.
The "Band" dataset must then have a size of 8 for its first dimension.

\section WavelengthsSection Wavelengths
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> Wavelengths <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 0.70 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> None <br>
<b>Optional In:</b> Version >= 0.70 <br>
<b>Contents:</b>
This HDF5 group acts as a container for the band wavelengths information.
The wavelengths information stored can be the start, center and end wavelength in microns associated with the sensor that recorded the data for a given band in the \ref RawDataSection.
The start, center and end wavelength information is stored as children HDF5 datasets of this group as shown below:<br><br>
<table align="center">
<tr>
    <td><b>Dataset Name</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>Start</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>1 dimension</td>
    <td>
    This dataset will contain the micron value of the starting wavelength value detected by the sensor that recorded the information for the given band in \ref RawDataSection.
    This dataset is optional and may not be present.
    </td>
</tr>
<tr>
    <td>Center</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>1 dimension</td>
    <td>
    This dataset will contain the micron value of the center wavelength value detected by the sensor that recorded the information for the given band in \ref RawDataSection.
    This dataset is optional and may not be present.
    </td>
</tr>
<tr>
    <td>End</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>1 dimension</td>
    <td>
    This dataset will contain the micron value of the ending wavelength value detected by the sensor that recorded the information for the given band in \ref RawDataSection.
    This dataset is optional and may not be present.
    </td>
</tr>
</table>
<p>
For all of the HDF5 Datasets shown above, the size of their dimension will be the same size as the Band dimension in \ref RawDataSection.
An example of how data is stored in this group is shown below.
Imagine that a sensor detected the following wavelengths as shown below:<br><br>
<table align="center">
<tr>
    <td><b>Band</b></td>
    <td><b>Start Wavelength Detected (in Microns)</b></td>
    <td><b>Center Wavelength Detected (in Microns)</b></td>
    <td><b>End Wavelength Detected (in Microns)</b></td>
</tr>
<tr>
    <td>0</td>
    <td>0.34</td>
    <td>0.44</td>
    <td>0.54</td>
</tr>
<tr>
    <td>1</td>
    <td>0.52</td>
    <td>0.62</td>
    <td>0.72</td>
</tr>
<tr>
    <td>2</td>
    <td>0.70</td>
    <td>0.80</td>
    <td>0.90</td>
</tr>
</table>
<p>
Then if data from this sensor was stored in an Ice formatted file, the following would be true for the HDF5 datasets stored as children of this group.
The "Start" HDF5 Dataset would contain (0.34, 0.52, 0.70).
The "Center" HDF5 Dataset would contain (0.44, 0.62, 0.80).
The "End" HDF5 Dataset would contain (0.54, 0.72, 0.90).
If data from only band 0 and band 2 of this sensor was stored in an Ice formatted file, the following would be true for the HDF5 datasets stored as children of this group.
The "Start" HDF5 Dataset would contain (0.34, 0.70).
The "Center" HDF5 Dataset would contain (0.44, 0.80).
The "End" HDF5 Dataset would contain (0.54, 0.90).

\section BandNamesSection BandNames
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> BandNames <br>
<b>HDF5 Container:</b> HDF5 Dataset <br>
<b>HDF5 Type:</b> H5T_C_S1 <br>
<b>HDF5 DataSpace:</b> 1 dimension. <br>
<b>Added In:</b> Version 0.70 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> None <br>
<b>Optional In:</b> Version >= 0.70 <br>
<b>Contents:</b> 
This HDF5 Dataset will contain the name of each band.
The size of the HDF5 dataset will the same size as the Band dimension in \ref RawDataSection.
The dimension within the \ref RawDataSection that represents the band is dependent on the InterleaveFormat attribute.
Each entry in the HDF5 Dataset contains the name of the corresponding band.
This HDF5 Dataset will only be present if the band names were present in the original data.

\section MetadataSection Metadata
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> Metadata <br>
<b>HDF5 Container:</b> HDF5 Dataset <br>
<b>HDF5 Type:</b> H5T_C_S1 <br>
<b>HDF5 DataSpace:</b> Scalar <br>
<b>Added In:</b> Version 0.70 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> None <br>
<b>Optional In:</b> Version >= 0.70 <br>
<b>Contents:</b> 
This HDF5 dataset contains additional metadata associated with the cube.
The %Opticks application allows plug-in developers to store a wide variety of additional metadata for a cube, therefore the Ice specification cannot provide specific details on the contents or purpose of the metadata stored here.
The metadata associated with a cube will be converted a XML formatted string and then stored in this HDF5 dataset.
The specifics of the XML format will not be documented in the Ice specification.
The reason for this is because the ability to save and load the metadata from an Ice formatted file is internal to the %Opticks application.
The reading and writing of this HDF5 dataset should not be performed by other applications that read or write Ice formatted files.

\section ClassificationSection Classification
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> Classification <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 0.90 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 0.90 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b> 
This HDF5 group will store the information required to represent the security classification of the \ref RawDataSection.
This HDF5 Group is used to store whether the actual \ref RawDataSection is classified one of the following: "Unclassified", "Confidential", "Restricted", "Secret" or "Top Secret".
The contents of this HDF5 Group are partially based upon the classification information stored according to the NITF (National Imagery Transmission Format) Standard v2.1.
The contents of this HDF5 group are listed below:<br><br>
<table align="center">
<tr>
    <td><b>Name</b></td>
    <td><b>HDF5 Container</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>ClassificationText</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>Contains the text of the security marking that should be placed on the top and bottom of the image rendered from the \ref RawDataSection.
    This attribute is derived from the contents of the other attributes present on the Classification group.
    Changing the value of this attribute is not supported by external readers or writers of Ice formatted files.
    </td>
</tr>
<tr>
    <td>Level</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>System</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>Codewords</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>Control</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>Releasing</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>Reason</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>DeclassificationType</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>DeclassificationDate</td>
    <td>HDF5 Attribute</td>
    <td>FILLIN</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>DeclassificationExemption</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>DowngradeLevel</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>DowngradeDate</td>
    <td>HDF5 Attribute</td>
    <td>FILIN</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>CountryCode</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>Description</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>Authority</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>AuthorityType</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>SourceDate</td>
    <td>HDF5 Attribute</td>
    <td>FILLIN</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>SecurityControlNumber</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>CopyNumber</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>NumberOfCopies</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
<tr>
    <td>Metadata</td>
    <td>HDF5 Dataset</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>INTERNAL ONLY.  NOT SUPPORTED FOR EXTERNAL READERS/WRITERS.</td>
</tr>
</table>

\section GcpSection GroundControlPoints
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> GroundControlPoints <br>
<b>HDF5 Container:</b> HDF5 Dataset <br>
<b>HDF5 Type:</b> Compound DataType. See Contents for more details <br>
<b>HDF5 DataSpace:</b> 1 dimension. <br>
<b>Added In:</b> Version 0.90 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> None <br>
<b>Optional In:</b> Version >= 0.90 <br>
<b>Contents:</b> 
This HDF5 Dataset contains the known latitude and longitude values for given points within the \ref RawDataSection.
The type of this HDF5 Dataset is a compound data type with members as shown below:<br><br>
<table align="center">
<tr>
    <td><b>Member Name</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>pixelX</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This value will be the on-disk column number that this point refers to.  See \ref OriginalNumbersDetailSection for details on the on-disk number</td>
</tr>
<tr>
    <td>pixelY</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This value will be the on-disk row number that this point refers to.  See \ref OriginalNumbersDetailSection for details on the on-disk number</td>
</tr>
<tr>
    <td>latitude</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This value will be the latitude that corresponds to the given pixelX.</td>
</tr>
<tr>
    <td>longitude</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This value will be the longitude that corresponds to the given pixelY.</td>
</tr>
</table>
<p>
The latitude and longitude values are defined to use the WGS84 (World Geodetic System 84) coordinate system.
The accuracy of the latitude and longitude values for the given pixelX and pixelY values is not defined by the Ice format.
The pixelX and pixelY correspond to the on-disk numbers of the \ref RawDataSection.
The pixelX and pixelY are stored as floating point numbers, but the on-disk numbers of the \ref RawDataSection are integral.
This allows the latitude and longitude to be stored for intermediate points on the \ref RawDataSection.
For example, the latitude and longitude values for pixelX 20.5 and pixelY 50.891 could be stored in this HDF5 dataset.
This HDF5 Dataset will usually contain latitude and longitude information for the 4 corners of the \ref RawDataSection, but that is not required.
This HDF5 Dataset will only be written out if the geocoordinate information was available to the application.

\section UnitsSection Units
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> Units <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 1.00 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 1.00 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b> 
This HDF5 group will store the information required to represent the units of the \ref RawDataSection.
The contents of this HDF5 group are listed below:<br><br>
<table align="center">
<tr>
    <td><b>Name</b></td>
    <td><b>HDF5 Container</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>RangeMax</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>The specifies the maximum value allowed for data with this unit. 
    Please see Units::getRangeMax() or Units::setRangeMax() for more details.
    </td>
</tr>
<tr>
    <td>RangeMin</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>The specifies the minimum value allowed for data with this unit. 
    Please see Units::getRangeMin() or Units::setRangeMin() for more details.
    </td>
</tr>
<tr>
    <td>ScaleFromStandard</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>Specifies the scaling value to scale these data values back to the standard unit value.
    Please see Units::getScaleFromStandard() or Units::setScaleFromStandard() for more details.
    </td>
</tr>
<tr>
    <td>Name</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>Provides a textual name for this unit.
    </td>
</tr>
<tr>
    <td>Type</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>Gets the actual type of the unit, which must be one of the following:
        - Radiance
        - Reflectance
        - Emissivity
        - Digital Number
        - Custom
        - Reflectance Factor
        - Transmittance
        - Absorptance
        - Absorbance
        - Distance   
    </td>
</tr>
</table>

\section DisplayInformationSection Display Information
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> DisplayInformation <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 1.00 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 1.00 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b> 
This HDF5 group will store the information used to control the display of the data found in \ref RawDataSection.
The contents of this HDF5 group are listed below:<br><br>
<table align="center">
<tr>
    <td><b>Name</b></td>
    <td><b>HDF5 Container</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>GrayDisplayedBand</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_UINT</td>
    <td>Scalar</td>
    <td>This is the on-disk number of the band that should be displayed to the user when the display mode is grayscale.
    Please refer to the \ref RawDataSection for more details.
    </td>
</tr>
<tr>
    <td>RedDisplayedBand</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_UINT</td>
    <td>Scalar</td>
    <td>This is the on-disk number of the band that should be displayed to the user for the red channel when the display mode is rgb.
    Please refer to the \ref RawDataSection for more details.
    </td>
</tr>
<tr>
    <td>GreenDisplayedBand</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_UINT</td>
    <td>Scalar</td>
    <td>This is the on-disk number of the band that should be displayed to the user for the green channel when the display mode is rgb.
    Please refer to the \ref RawDataSection for more details.
    </td>
</tr>
<tr>
    <td>BlueDisplayedBand</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_UINT</td>
    <td>Scalar</td>
    <td>This is the on-disk number of the band that should be displayed to the user for the blue channel when the display mode is rgb.
    Please refer to the \ref RawDataSection for more details.
    </td>
</tr>
<tr>
    <td>DisplayMode</td>
    <td>HDF5 Attribute</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>This defines whether the raw data should be displayed in grayscale or rgb mode.
    See the DisplayedBand attributes above for details on what part of the raw data will be displayed to the user.
    If the value of this attribute is "grayscale" then the raw data will be displayed in grayscale mode.
    If the value of this attribute is "rgb" then the raw data will be displayed in rgb mode.
    </td>
</tr>
<tr>
    <td>XPixelSize</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This specifies how the data should be scaled on the x-dimension or column when displayed to the user.
    A XPixelSize of 1.0 means to draw the raw data at its original size.
    A XPixelSize of 2.0 means to draw the raw data twice as large in the x-dimension as its original size.
    </td>
</tr>
<tr>
    <td>YPixelSize</td>
    <td>HDF5 Attribute</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This specifies how the data should be scaled on the y-dimension or row when displayed to the user.
    A YPixelSize of 1.0 means to draw the raw data at its original size.
    A YPixelSize of 2.0 means to draw the raw data twice as large in the y-dimension as its original size.
    </td>
</tr>
</table>

\section BandStatisticsSection Band Statistics
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> BandStatistics <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 1.00 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 1.00 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b>
This group contains information on the statistics for each band in the \ref RawDataSection.
This HDF5 group contains two children HDF5 datasets, see \ref BandStatisticsMetadataSection and \ref BandStatisticsActualsSection.

\section BandStatisticsMetadataSection Band Statistics Metadata
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> BandStatistics <br>
<b>HDF5 Type:</b> Compound DataType. See Contents for more details <br>
<b>HDF5 DataSpace:</b> 1 dimension. <br>
<b>Added In:</b> Version 1.00 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> Version >= 1.00 <br>
<b>Optional In:</b> None <br>
<b>Contents:</b> 
This HDF5 Dataset contains the information about how band statistics should be generated for each band in the \ref RawDataSection.
The type of this HDF5 Dataset is a compound data type with members as shown below:<br><br>
<table align="center">
<tr>
    <td><b>Member Name</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>resolution</td>
    <td>H5T_NATIVE_UINT</td>
    <td>Scalar</td>
    <td>This is the number of rows and columns within a band that must be skipped when an application wishes to generate band statistics.
    A value of 0 indicates that the application can choose whether to skip rows or columns when generating band statistics.
    A value of 1, would indicate that an application should read rows 0, 2, 4, 6, 8, etc of a band when generating statistics.
    A value of 2, would indicate that an application should read rows 0, 3, 6, 9, 12, etc of a band when generating statistics.
    </td>
</tr>
<tr>
    <td>badValues</td>
    <td>H5T_NATIVE_INT</td>
    <td>Variable length</td>
    <td>This indicates the raw data values that should be ignored by the application when generating statistics for a band.
    This is a variable length array and can contain an unlimited number of values.
    The values stored are int, but the raw data can be stored in a non integral format.
    If that is the case, the application should truncate the raw data values before comparing them to the bad values present in this member.    
    </td>
</tr>
</table>
<p>This HDF5 Dataset must be have the same number of values in it as the size of the band dimension in \ref RawDataSection.

\section BandStatisticsActualsSection Calculated Band Statistics
<hr>
<b>Parent:</b> \ref CubeSection <br>
<b>HDF5 Path:</b> BandStatistics <br>
<b>HDF5 Type:</b> Compound DataType. See Contents for more details <br>
<b>HDF5 DataSpace:</b> 1 dimension. <br>
<b>Added In:</b> Version 1.00 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> N/A <br>
<b>Optional In:</b> Version >= 1.00 <br>
<b>Contents:</b> 
This HDF5 Dataset contains the actual band statistics for certains bands in the \ref RawDataSection.
The type of this HDF5 Dataset is a compound data type with members as shown below:<br><br>
<table align="center">
<tr>
    <td><b>Member Name</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>onDiskNumber</td>
    <td>H5T_NATIVE_UINT</td>
    <td>Scalar</td>
    <td>This is the on-disk number of the band in \ref RawDataSection that these statistics were calculated from.</td>
</tr>
<tr>
    <td>average</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This is the average of all the values found in the given band in the \ref RawDataSection.</td>
</tr>
<tr>
    <td>min</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This is the minimum value found in the given band in the \ref RawDataSection.</td>
</tr>
<tr>
    <td>max</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This is the maximum value found in the given band in the \ref RawDataSection.</td>
</tr>
<tr>
    <td>standardDeviation</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This is the standard deviation of all the values found in the given band in the \ref RawDataSection.</td>
</tr>
<tr>
    <td>percentiles</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Variable length
    (NOTE: This is defined as a variable length type, but it must contain 1001 values).</td>
    <td>This array is used to store percentile information for the values found in a given band.
    For example, if you get the value at position 749.
    Then 75% of the values found in the given band have a value less than this entry.
    Conversely, 25% of the values found in the given band have a value greater than this entry.
    For another example, if you get the value at position 329.
    Then 33% of the values found in the given band have value less than this entry.
    Conversely, 67% of the values found in the given band have a value greater than this entry.
    </td>
</tr>
<tr>
    <td>binCenters</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Variable length
    (NOTE: This is defined as a variable length type, but it must contain 256 values).</td>
    <td>This array is used to store bin information for a band.
    The difference between the minimum and maximum value in a band is divided into 256 sections.
    Each value in the array indicates the raw value that corresponds to the center value of each bin.
    </td>
</tr>
<tr>
    <td>histogramCounts</td>
    <td>H5T_NATIVE_UINT</td>
    <td>Variable length
    (NOTE: This is defined as a variable length type, but it must contain 256 values).</td>
    <td>This array is used to store information related to each bin as defined in the binCenters member.
    Each value in the array indicates the number of raw values in the band that fit into the bin.
    The range of each bin is defined by the binCenters member documented above.
    </td>
</tr>
</table>
<p>This HDF5 Dataset will only contain actual band statistics values for those bands that already had their statistics information calculated at the time that the Ice file was created.
This means that this HDF5 Dataset is not required to be the same size as the bands dimension in the \ref RawDataSection and in fact may not exist at all in the Ice file.
When interpreting the band statistics values from this HDF5 Dataset keep in mind they were calculated using the resolution and bad values for the band as stored in \ref BandStatisticsMetadataSection.

\section LayersSection Layers
<hr>
<b>Parent:</b> None <br>
<b>HDF5 Path:</b> /Layers <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 1.10 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> None <br>
<b>Optional In:</b> Version >= 1.10 <br>
<b>Contents:</b> 
This HDF5 group acts simply as a container for the layers contained within the ice file. This group will contain additional HDF5 groups for each layer that is stored in the file.
Each layer stored in the file will be stored in a child HDF5 group following the naming convention of [LayerType][Number] (i.e.: PseudocolorLayer1, PseudocolorLayer2, PseudocolorLayer3, etc.).
The numbers will start at 1 and then increase. All current versions of the Ice format only provide support for one layer. The only currently supported layer type is \ref PseudocolorLayerSection.

\section LayerSection Layer
<hr>
<b>Parent:</b> \ref PseudocolorLayerSection <br>
<b>HDF5 Path:</b> Layer <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 1.10 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> None <br>
<b>Optional In:</b> Version >= 1.10 <br>
<b>Contents:</b> 
This HDF5 group acts as a container for all of the generic data required to store the properties of a layer. Its attributes are provided below.
<table align="center">
<tr>
    <td><b>Name</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>Name</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>The name of this layer.</td>
</tr>
<tr>
    <td>LayerType</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>The type of this layer. The only supported value is "PseudocolorLayer".</td>
</tr>
<tr>
    <td>XScaleFactor</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This value will be the X scale factor(with respect to the view) to use when drawing the layer.</td>
</tr>
<tr>
    <td>YScaleFactor</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This value will be the Y scale factor (with respect to the view) to use when drawing the layer.</td>
</tr>
<tr>
    <td>XOffset</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This value will be the X offset (with respect to the view) to use when drawing the layer.</td>
</tr>
<tr>
    <td>YOffset</td>
    <td>H5T_NATIVE_DOUBLE</td>
    <td>Scalar</td>
    <td>This value will be the Y offset (with respect to the view) to use when drawing the layer.</td>
</tr>
</table>

\section PseudocolorLayerSection PseudocolorLayer
<hr>
<b>Parent:</b> \ref LayersSection <br>
<b>HDF5 Path:</b> PseudocolorLayer[Number] <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 1.10 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> None <br>
<b>Optional In:</b> Version >= 1.10 <br>
<b>Contents:</b> 
This HDF5 group acts as a container for all of the data required to store the properties of a pseudocolor layer.
This group will only appear if the file type is "PseudocolorLayer".
This group will contain the \ref LayerSection and \ref PseudocolorLayerPropertiesSection groups. In addition, this group will also contain the attributes listed below.
<table align="center">
<tr>
    <td><b>Name</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>Dataset</td>
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>The full path of the cube containing the cube data for this layer. This value must be "/Datasets/Cube1".</td>
</tr>
</table>

\section PseudocolorLayerPropertiesSection PseudocolorLayer
<hr>
<b>Parent:</b> \ref PseudocolorLayerSection <br>
<b>HDF5 Path:</b> PseudocolorLayer <br>
<b>HDF5 Container:</b> HDF5 Group <br>
<b>Added In:</b> Version 1.10 <br>
<b>Removed In:</b> N/A <br>
<b>Required In:</b> None <br>
<b>Optional In:</b> Version >= 1.10 <br>
<b>Contents:</b> 
This HDF5 group acts as a container for all of the layer-specific data required to store the properties of a single pseudocolor layer.
Its members are provided below.
<table align="center">
<tr>
    <td><b>Name</b></td>
    <td><b>HDF5 Container</b></td>
    <td><b>HDF5 Type</b></td>
    <td><b>HDF5 DataSpace</b></td>
    <td><b>Description</b></td>
</tr>
<tr>
    <td>Symbol</td>
    <td>HDF5 Attribute</td> 
    <td>H5T_C_S1</td>
    <td>Scalar</td>
    <td>
    The symbol type to use when displaying this pseudocolor layer. Valid values are "solid", "x", "crosshair", "asterisk", "horizontalLine", "verticalLine",
    "forwardSlash", "backSlash", "box", "boxX", "boxCrosshair", "boxAsterisk", "boxHorizontalLine", "boxVerticalLine", "boxForwardSlash", and "boxBackSlash".
    </td>
</tr>
<tr>
    <td>ClassNames</td>
    <td>HDF5 Dataset</td>
    <td>H5T_C_S1</td>
    <td>1 dimension</td>
    <td>This dataset will contain the name of each pseudocolor layer class.</td>
</tr>
<tr>
    <td>ClassValues</td>
    <td>HDF5 Dataset</td>
    <td>H5T_NATIVE_INT</td>
    <td>1 dimension</td>
    <td>
    This dataset will contain the value of each pseudocolor layer class.
    For each occurrence of the value in the Dataset, a symbol of the specified color will be displayed.
    </td>
</tr>
<tr>
    <td>ClassColors</td>
    <td>HDF5 Dataset</td>
    <td>H5T_C_S1</td>
    <td>1 dimension</td>
    <td>
    This dataset will contain the color of each pseudocolor layer class. This string is in the format "#AARRGGBB",
    where AA, RR, GG, and BB correspond to unsigned, 8-bit hexadceimal values for the alpha (opacity), red, green, and blue values respectively.
    </td>
</tr>
<tr>
    <td>ClassIsDisplayed</td>
    <td>HDF5 Dataset</td>
    <td>H5T_NATIVE_UCHAR</td>
    <td>1 dimension</td>
    <td>
    This dataset will contain a 0 or 1 for each pseudocolor layer class. 0 indicates that the class should not be displayed.
    All other values indicate that the class should be displayed.
    </td>
</tr>
</table>
Each HDF5 Dataset shown above must be of equal size and the indices should correspond to the same class across all datasets (for example, ClassNames[i] should contain the name of the class with ClassValues[i], ClassColors[i], and ClassIsDisplayed[i]).

\section AppendixSection Appendix
<hr>

\subsection OriginalNumbersDetailSection Discussion of Original, On-Disk and Active Numbers
In order to understand the definition of original, on-disk and active numbers, the following example will be shown with explanation to follow.
Imagine that some data was stored on the disk and that it had 7 rows and 5 columns and it had the following on-disk and original numbers as shown in the table below:<br><br>
<table align="center">
<tr><td colspan="8" align="center"><b>Table 1. Original SampleData</b></td></tr>
<tr><td>&nbsp;</td><td colspan="7" align="center">Column<br>D(On-Disk Row #, On-Disk Column #) O(Original Row #, Original Column #)</td></tr>
<tr><td rowspan="6">Row</td>
    <td>D(0, 0) O(0, 0)</td><td>D(0, 1) O(0, 1)</td><td>D(0, 2) O(0, 2)</td><td>D(0, 3) O(0, 3)</td><td>D(0, 4) O(0, 4)</td><td>D(0, 5) O(0, 5)</td><td>D(0, 6) O(0, 6)</td></tr>
<tr><td>D(1, 0) O(1, 0)</td><td>D(1, 1) O(1, 1)</td><td>D(1, 2) O(1, 2)</td><td>D(1, 3) O(1, 3)</td><td>D(1, 4) O(1, 4)</td><td>D(1, 5) O(1, 5)</td><td>D(1, 6) O(1, 6)</td></tr>
<tr><td>D(2, 0) O(2, 0)</td><td>D(2, 1) O(2, 1)</td><td>D(2, 2) O(2, 2)</td><td>D(2, 3) O(2, 3)</td><td>D(2, 4) O(2, 4)</td><td>D(2, 5) O(2, 5)</td><td>D(2, 6) O(2, 6)</td></tr>
<tr><td>D(3, 0) O(3, 0)</td><td>D(3, 1) O(3, 1)</td><td>D(3, 2) O(3, 2)</td><td>D(3, 3) O(3, 3)</td><td>D(3, 4) O(3, 4)</td><td>D(3, 5) O(3, 5)</td><td>D(3, 6) O(3, 6)</td></tr>
<tr><td>D(4, 0) O(4, 0)</td><td>D(4, 1) O(4, 1)</td><td>D(4, 2) O(4, 2)</td><td>D(4, 3) O(4, 3)</td><td>D(4, 4) O(4, 4)</td><td>D(4, 5) O(4, 5)</td><td>D(4, 6) O(4, 6)</td></tr>
</table>
<p>Now imagine if that data was loaded into the application, but skipping the first 2 rows and the first 3 columns and only loading 2 rows and 3 columns.  That loaded data is now shown below, notice the addition of Active numbers which are only valid while data is loaded in the application:</p><br><br>
<table align="center">
<tr><td colspan="4" align="center"><b>Table 2. SampleData from Table 1 Loaded Into Application (Skipped first 2 rows and first 3 columns and only loading 2 rows and 3 columns)</b></td></tr>
<tr><td>&nbsp;</td><td colspan="3" align="center">Column<br>D(On-Disk Row #, On-Disk Column #) O(Original Row #, Original Column #) A(Active Row #, Active Column #)</td></tr>
<tr><td rowspan="2">Row</td>
    <td>D(2, 3) O(2, 3) A(0, 0)</td><td>D(2, 4) O(2, 4) A(0, 1)</td><td>D(2, 5) O(2, 5) A(0, 2)</td></tr>
<tr><td>D(3, 3) O(3, 3) A(1, 0)</td><td>D(3, 4) O(3, 4) A(1, 1)</td><td>D(3, 5) O(3, 5) A(1, 2)</td></tr>
</table>
<p>Below you will see a snapshot of Table 1 with the data that was loaded into Table 2 bolded:</p><br><br>
<table align="center">
<tr><td colspan="8" align="center"><b>Table 3. Data from Table 1 bolded to show what was loaded into Table 2</b></td></tr>
<tr><td>&nbsp;</td><td colspan="7" align="center">Column<br>D(On-Disk Row #, On-Disk Column #) O(Original Row #, Original Column #)</td></tr>
<tr><td rowspan="6">Row</td>
    <td>D(0, 0) O(0, 0)</td><td>D(0, 1) O(0, 1)</td><td>D(0, 2) O(0, 2)</td><td>D(0, 3) O(0, 3)</td><td>D(0, 4) O(0, 4)</td><td>D(0, 5) O(0, 5)</td><td>D(0, 6) O(0, 6)</td></tr>
<tr><td>D(1, 0) O(1, 0)</td><td>D(1, 1) O(1, 1)</td><td>D(1, 2) O(1, 2)</td><td>D(1, 3) O(1, 3)</td><td>D(1, 4) O(1, 4)</td><td>D(1, 5) O(1, 5)</td><td>D(1, 6) O(1, 6)</td></tr>
<tr><td>D(2, 0) O(2, 0)</td><td>D(2, 1) O(2, 1)</td><td>D(2, 2) O(2, 2)</td><td><b>D(2, 3) O(2, 3)</b></td><td><b>D(2, 4) O(2, 4)</b></td><td><b>D(2, 5) O(2, 5)</b></td><td>D(2, 6) O(2, 6)</td></tr>
<tr><td>D(3, 0) O(3, 0)</td><td>D(3, 1) O(3, 1)</td><td>D(3, 2) O(3, 2)</td><td><b>D(3, 3) O(3, 3)</b></td><td><b>D(3, 4) O(3, 4)</b></td><td><b>D(3, 5) O(3, 5)</b></td><td>D(3, 6) O(3, 6)</td></tr>
<tr><td>D(4, 0) O(4, 0)</td><td>D(4, 1) O(4, 1)</td><td>D(4, 2) O(4, 2)</td><td>D(4, 3) O(4, 3)</td><td>D(4, 4) O(4, 4)</td><td>D(4, 5) O(4, 5)</td><td>D(4, 6) O(4, 6)</td></tr>
</table>
<p>Now imagine that this data was exported from the application and written back to a file on the disk. The table below shows that, notice the removal of active numbers because the data is no longer loaded in the application:</p><br><br>
<table align="center">
<tr><td colspan="4" align="center"><b>Table 4. SampleData in Table 2 now written to the disk</b></td></tr>
<tr><td>&nbsp;</td><td colspan="3" align="center">Column<br>D(On-Disk Row #, On-Disk Column #) O(Original Row #, Original Column #)</td></tr>
<tr><td rowspan="2">Row</td>
    <td>D(0, 0) O(2, 3)</td><td>D(0, 1) O(2, 4)</td><td>D(0, 2) O(2, 5)</td></tr>
<tr><td>D(1, 0) O(3, 3)</td><td>D(1, 1) O(3, 4)</td><td>D(1, 2) O(3, 5)</td></tr>
</table>
<p>Now imagine if this new data that was just written to the disk was reloaded into the application but the second column was skipped.,  The table for this is shown below:</p><br><br>
<table align="center">
<tr><td colspan="3" align="center"><b>Table 5. SampleData in Table 4 loaded back into the application but skipping the second column</b></td></tr>
<tr><td>&nbsp;</td><td colspan="2" align="center">Column<br>D(On-Disk Row #, On-Disk Column #) O(Original Row #, Original Column #) A(Active Row #, Active Column #)</td></tr>
<tr><td rowspan="2">Row</td>
    <td>D(0, 0) O(2, 3) A(0, 0)</td><td>D(0, 2) O(2, 5) A(0, 1)</td></tr>
<tr><td>D(1, 0) O(3, 3) A(1, 0)</td><td>D(1, 2) O(3, 5) A(1, 1)</td></tr>
</table>
<p>Below you will see a snapshot of Table 1 with the rows still present in Table 5 highlighted in bold.</p><br><br>
<table align="center">
<tr><td colspan="8" align="center"><b>Table 6. Data from Table 1 bolded to show data still present in Table 5.</b></td></tr>
<tr><td>&nbsp;</td><td colspan="7" align="center">Column<br>D(On-Disk Row #, On-Disk Column #) O(Original Row #, Original Column #)</td></tr>
<tr><td rowspan="6">Row</td>
    <td>D(0, 0) O(0, 0)</td><td>D(0, 1) O(0, 1)</td><td>D(0, 2) O(0, 2)</td><td>D(0, 3) O(0, 3)</td><td>D(0, 4) O(0, 4)</td><td>D(0, 5) O(0, 5)</td><td>D(0, 6) O(0, 6)</td></tr>
<tr><td>D(1, 0) O(1, 0)</td><td>D(1, 1) O(1, 1)</td><td>D(1, 2) O(1, 2)</td><td>D(1, 3) O(1, 3)</td><td>D(1, 4) O(1, 4)</td><td>D(1, 5) O(1, 5)</td><td>D(1, 6) O(1, 6)</td></tr>
<tr><td>D(2, 0) O(2, 0)</td><td>D(2, 1) O(2, 1)</td><td>D(2, 2) O(2, 2)</td><td><b>D(2, 3) O(2, 3)</b></td><td>D(2, 4) O(2, 4)</td><td><b>D(2, 5) O(2, 5)</b></td><td>D(2, 6) O(2, 6)</td></tr>
<tr><td>D(3, 0) O(3, 0)</td><td>D(3, 1) O(3, 1)</td><td>D(3, 2) O(3, 2)</td><td><b>D(3, 3) O(3, 3)</b></td><td>D(3, 4) O(3, 4)</td><td><b>D(3, 5) O(3, 5)</b></td><td>D(3, 6) O(3, 6)</td></tr>
<tr><td>D(4, 0) O(4, 0)</td><td>D(4, 1) O(4, 1)</td><td>D(4, 2) O(4, 2)</td><td>D(4, 3) O(4, 3)</td><td>D(4, 4) O(4, 4)</td><td>D(4, 5) O(4, 5)</td><td>D(4, 6) O(4, 6)</td></tr>
</table>
<p>From the above example, you can see that the original number of a given row and column were preserved in the data from Table 1 to Table 5.
If we look at Table 1, the original numbers for the rows would be (0, 1, 2, 3, 4) while the original numbers for the columns would be (0, 1, 2, 3, 4, 5, 6).
If we look at Table 4, the original numbers for the rows would be (2, 3) while the original numbers for the columns would be (3, 4, 5).

 */
